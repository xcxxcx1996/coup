// Copyright 2020 The Nakama Authors
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
// http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.27.1
// 	protoc        v3.19.4
// source: api/coupapi.proto

// The realtime protocol for the template match engine.

package api

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// The marks available in the game.
type Role int32

const (
	// No mark specified. Unused.
	Role_DIPLOMAT Role = 0
	// X (Cross).
	Role_QUEEN Role = 1
	// O (Nought).
	Role_CAPTAIN  Role = 2
	Role_ASSASSIN Role = 3
	Role_BARON    Role = 4
)

// Enum value maps for Role.
var (
	Role_name = map[int32]string{
		0: "DIPLOMAT",
		1: "QUEEN",
		2: "CAPTAIN",
		3: "ASSASSIN",
		4: "BARON",
	}
	Role_value = map[string]int32{
		"DIPLOMAT": 0,
		"QUEEN":    1,
		"CAPTAIN":  2,
		"ASSASSIN": 3,
		"BARON":    4,
	}
)

func (x Role) Enum() *Role {
	p := new(Role)
	*p = x
	return p
}

func (x Role) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Role) Descriptor() protoreflect.EnumDescriptor {
	return file_api_coupapi_proto_enumTypes[0].Descriptor()
}

func (Role) Type() protoreflect.EnumType {
	return &file_api_coupapi_proto_enumTypes[0]
}

func (x Role) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Role.Descriptor instead.
func (Role) EnumDescriptor() ([]byte, []int) {
	return file_api_coupapi_proto_rawDescGZIP(), []int{0}
}

type State int32

const (
	// 什么都做不了
	State_IDLE State = 0
	// 自己回合开始，可以拿1，2，3块钱，和施放技能
	State_START State = 1
	// 质疑
	State_QUESTION State = 2
	// 保护自己，包括防偷牌，看牌，和刺杀
	State_DENY_MONEY    State = 3
	State_DENY_STEAL    State = 4
	State_DENY_ASSASSIN State = 5 // DENY_CHECK=5;
)

// Enum value maps for State.
var (
	State_name = map[int32]string{
		0: "IDLE",
		1: "START",
		2: "QUESTION",
		3: "DENY_MONEY",
		4: "DENY_STEAL",
		5: "DENY_ASSASSIN",
	}
	State_value = map[string]int32{
		"IDLE":          0,
		"START":         1,
		"QUESTION":      2,
		"DENY_MONEY":    3,
		"DENY_STEAL":    4,
		"DENY_ASSASSIN": 5,
	}
)

func (x State) Enum() *State {
	p := new(State)
	*p = x
	return p
}

func (x State) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (State) Descriptor() protoreflect.EnumDescriptor {
	return file_api_coupapi_proto_enumTypes[1].Descriptor()
}

func (State) Type() protoreflect.EnumType {
	return &file_api_coupapi_proto_enumTypes[1]
}

func (x State) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use State.Descriptor instead.
func (State) EnumDescriptor() ([]byte, []int) {
	return file_api_coupapi_proto_rawDescGZIP(), []int{1}
}

// The complete set of opcodes used for communication between clients and server.
type OpCode int32

const (
	// No opcode specified. Unused.
	OpCode_OPCODE_UNCODE OpCode = 0
	// 开始游戏
	OpCode_OPCODE_START OpCode = 1
	// 玩家抽卡
	OpCode_OPCODE_DRAW_CARD OpCode = 2
	// 玩家弃置卡牌
	OpCode_OPCODE_DISCARD OpCode = 3
	// 拿钱
	OpCode_OPCODE_DRAW_COINS OpCode = 4
	// 质疑
	OpCode_OPCODE_QUESTION OpCode = 5
	// 比赛结束
	OpCode_OPCODE_DONE OpCode = 6
	// **发动技能**
	//偷牌
	OpCode_OPCODE_STEAL_CARD OpCode = 7
	//换牌
	OpCode_OPCODE_CHANGE_CARD OpCode = 8
	//刺杀
	OpCode_OPCODE_ASSASSIN OpCode = 9
	//拿3块钱
	OpCode_OPCODE_DRAW_THREE_COINS OpCode = 10
	//防止偷拍
	OpCode_OPCODE_DENY_STEAL OpCode = 11
	//防止刺杀
	OpCode_OPCODE_DENY_KILL OpCode = 12
	//政变
	OpCode_OPCODE_COUP OpCode = 13 // OPCODE_DRAW_THREE_COINS=10;
)

// Enum value maps for OpCode.
var (
	OpCode_name = map[int32]string{
		0:  "OPCODE_UNCODE",
		1:  "OPCODE_START",
		2:  "OPCODE_DRAW_CARD",
		3:  "OPCODE_DISCARD",
		4:  "OPCODE_DRAW_COINS",
		5:  "OPCODE_QUESTION",
		6:  "OPCODE_DONE",
		7:  "OPCODE_STEAL_CARD",
		8:  "OPCODE_CHANGE_CARD",
		9:  "OPCODE_ASSASSIN",
		10: "OPCODE_DRAW_THREE_COINS",
		11: "OPCODE_DENY_STEAL",
		12: "OPCODE_DENY_KILL",
		13: "OPCODE_COUP",
	}
	OpCode_value = map[string]int32{
		"OPCODE_UNCODE":           0,
		"OPCODE_START":            1,
		"OPCODE_DRAW_CARD":        2,
		"OPCODE_DISCARD":          3,
		"OPCODE_DRAW_COINS":       4,
		"OPCODE_QUESTION":         5,
		"OPCODE_DONE":             6,
		"OPCODE_STEAL_CARD":       7,
		"OPCODE_CHANGE_CARD":      8,
		"OPCODE_ASSASSIN":         9,
		"OPCODE_DRAW_THREE_COINS": 10,
		"OPCODE_DENY_STEAL":       11,
		"OPCODE_DENY_KILL":        12,
		"OPCODE_COUP":             13,
	}
)

func (x OpCode) Enum() *OpCode {
	p := new(OpCode)
	*p = x
	return p
}

func (x OpCode) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (OpCode) Descriptor() protoreflect.EnumDescriptor {
	return file_api_coupapi_proto_enumTypes[2].Descriptor()
}

func (OpCode) Type() protoreflect.EnumType {
	return &file_api_coupapi_proto_enumTypes[2]
}

func (x OpCode) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use OpCode.Descriptor instead.
func (OpCode) EnumDescriptor() ([]byte, []int) {
	return file_api_coupapi_proto_rawDescGZIP(), []int{2}
}

type PlayerInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name  string  `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Cards []*Card `protobuf:"bytes,2,rep,name=cards,proto3" json:"cards,omitempty"`
	Coins int64   `protobuf:"varint,3,opt,name=coins,proto3" json:"coins,omitempty"`
	State State   `protobuf:"varint,4,opt,name=state,proto3,enum=api.State" json:"state,omitempty"`
}

func (x *PlayerInfo) Reset() {
	*x = PlayerInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_coupapi_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PlayerInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PlayerInfo) ProtoMessage() {}

func (x *PlayerInfo) ProtoReflect() protoreflect.Message {
	mi := &file_api_coupapi_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PlayerInfo.ProtoReflect.Descriptor instead.
func (*PlayerInfo) Descriptor() ([]byte, []int) {
	return file_api_coupapi_proto_rawDescGZIP(), []int{0}
}

func (x *PlayerInfo) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *PlayerInfo) GetCards() []*Card {
	if x != nil {
		return x.Cards
	}
	return nil
}

func (x *PlayerInfo) GetCoins() int64 {
	if x != nil {
		return x.Coins
	}
	return 0
}

func (x *PlayerInfo) GetState() State {
	if x != nil {
		return x.State
	}
	return State_IDLE
}

type Card struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id   string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Role Role   `protobuf:"varint,2,opt,name=role,proto3,enum=api.Role" json:"role,omitempty"`
}

func (x *Card) Reset() {
	*x = Card{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_coupapi_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Card) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Card) ProtoMessage() {}

func (x *Card) ProtoReflect() protoreflect.Message {
	mi := &file_api_coupapi_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Card.ProtoReflect.Descriptor instead.
func (*Card) Descriptor() ([]byte, []int) {
	return file_api_coupapi_proto_rawDescGZIP(), []int{1}
}

func (x *Card) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Card) GetRole() Role {
	if x != nil {
		return x.Role
	}
	return Role_DIPLOMAT
}

// Message data sent by server to clients representing a new game round starting.
type Start struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The assignments of the marks to players for this round.
	PlayerInfos map[string]*PlayerInfo `protobuf:"bytes,1,rep,name=playerInfos,proto3" json:"playerInfos,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	// current_player_id 谁的回合
	CurrentPlayerId string `protobuf:"bytes,2,opt,name=current_player_id,json=currentPlayerId,proto3" json:"current_player_id,omitempty"`
	// string question_player_id=3;
	// The deadline time by which the player must submit their move, or forfeit.
	Deadline int64 `protobuf:"varint,3,opt,name=deadline,proto3" json:"deadline,omitempty"`
	//比赛信息
	Message string `protobuf:"bytes,4,opt,name=message,proto3" json:"message,omitempty"`
}

func (x *Start) Reset() {
	*x = Start{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_coupapi_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Start) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Start) ProtoMessage() {}

func (x *Start) ProtoReflect() protoreflect.Message {
	mi := &file_api_coupapi_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Start.ProtoReflect.Descriptor instead.
func (*Start) Descriptor() ([]byte, []int) {
	return file_api_coupapi_proto_rawDescGZIP(), []int{2}
}

func (x *Start) GetPlayerInfos() map[string]*PlayerInfo {
	if x != nil {
		return x.PlayerInfos
	}
	return nil
}

func (x *Start) GetCurrentPlayerId() string {
	if x != nil {
		return x.CurrentPlayerId
	}
	return ""
}

func (x *Start) GetDeadline() int64 {
	if x != nil {
		return x.Deadline
	}
	return 0
}

func (x *Start) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

// A game state update sent by the server to clients.
type Update struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The assignments of the marks to players for this round.
	PlayerInfos map[string]*PlayerInfo `protobuf:"bytes,1,rep,name=playerInfos,proto3" json:"playerInfos,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	// current_player_id 谁的回合
	CurrentPlayerId  string `protobuf:"bytes,2,opt,name=current_player_id,json=currentPlayerId,proto3" json:"current_player_id,omitempty"`
	QuestionPlayerId string `protobuf:"bytes,3,opt,name=question_player_id,json=questionPlayerId,proto3" json:"question_player_id,omitempty"`
	// The deadline time by which the player must submit their move, or forfeit.
	Deadline int64 `protobuf:"varint,4,opt,name=deadline,proto3" json:"deadline,omitempty"`
	//比赛信息
	Message string `protobuf:"bytes,5,opt,name=message,proto3" json:"message,omitempty"`
}

func (x *Update) Reset() {
	*x = Update{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_coupapi_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Update) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Update) ProtoMessage() {}

func (x *Update) ProtoReflect() protoreflect.Message {
	mi := &file_api_coupapi_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Update.ProtoReflect.Descriptor instead.
func (*Update) Descriptor() ([]byte, []int) {
	return file_api_coupapi_proto_rawDescGZIP(), []int{3}
}

func (x *Update) GetPlayerInfos() map[string]*PlayerInfo {
	if x != nil {
		return x.PlayerInfos
	}
	return nil
}

func (x *Update) GetCurrentPlayerId() string {
	if x != nil {
		return x.CurrentPlayerId
	}
	return ""
}

func (x *Update) GetQuestionPlayerId() string {
	if x != nil {
		return x.QuestionPlayerId
	}
	return ""
}

func (x *Update) GetDeadline() int64 {
	if x != nil {
		return x.Deadline
	}
	return 0
}

func (x *Update) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

// Complete game round with winner announcement.
type Done struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *Done) Reset() {
	*x = Done{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_coupapi_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Done) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Done) ProtoMessage() {}

func (x *Done) ProtoReflect() protoreflect.Message {
	mi := &file_api_coupapi_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Done.ProtoReflect.Descriptor instead.
func (*Done) Descriptor() ([]byte, []int) {
	return file_api_coupapi_proto_rawDescGZIP(), []int{4}
}

type Question struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PlayerId string `protobuf:"bytes,1,opt,name=player_id,json=playerId,proto3" json:"player_id,omitempty"`
}

func (x *Question) Reset() {
	*x = Question{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_coupapi_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Question) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Question) ProtoMessage() {}

func (x *Question) ProtoReflect() protoreflect.Message {
	mi := &file_api_coupapi_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Question.ProtoReflect.Descriptor instead.
func (*Question) Descriptor() ([]byte, []int) {
	return file_api_coupapi_proto_rawDescGZIP(), []int{5}
}

func (x *Question) GetPlayerId() string {
	if x != nil {
		return x.PlayerId
	}
	return ""
}

type GetCoin struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PlayerId string `protobuf:"bytes,1,opt,name=player_id,json=playerId,proto3" json:"player_id,omitempty"`
	Coins    int32  `protobuf:"varint,2,opt,name=coins,proto3" json:"coins,omitempty"`
}

func (x *GetCoin) Reset() {
	*x = GetCoin{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_coupapi_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetCoin) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetCoin) ProtoMessage() {}

func (x *GetCoin) ProtoReflect() protoreflect.Message {
	mi := &file_api_coupapi_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetCoin.ProtoReflect.Descriptor instead.
func (*GetCoin) Descriptor() ([]byte, []int) {
	return file_api_coupapi_proto_rawDescGZIP(), []int{6}
}

func (x *GetCoin) GetPlayerId() string {
	if x != nil {
		return x.PlayerId
	}
	return ""
}

func (x *GetCoin) GetCoins() int32 {
	if x != nil {
		return x.Coins
	}
	return 0
}

type DrawCard struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PlayerId string `protobuf:"bytes,1,opt,name=player_id,json=playerId,proto3" json:"player_id,omitempty"`
}

func (x *DrawCard) Reset() {
	*x = DrawCard{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_coupapi_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DrawCard) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DrawCard) ProtoMessage() {}

func (x *DrawCard) ProtoReflect() protoreflect.Message {
	mi := &file_api_coupapi_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DrawCard.ProtoReflect.Descriptor instead.
func (*DrawCard) Descriptor() ([]byte, []int) {
	return file_api_coupapi_proto_rawDescGZIP(), []int{7}
}

func (x *DrawCard) GetPlayerId() string {
	if x != nil {
		return x.PlayerId
	}
	return ""
}

type Discard struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PlayerId string `protobuf:"bytes,1,opt,name=player_id,json=playerId,proto3" json:"player_id,omitempty"`
	CardId   string `protobuf:"bytes,2,opt,name=card_id,json=cardId,proto3" json:"card_id,omitempty"`
}

func (x *Discard) Reset() {
	*x = Discard{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_coupapi_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Discard) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Discard) ProtoMessage() {}

func (x *Discard) ProtoReflect() protoreflect.Message {
	mi := &file_api_coupapi_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Discard.ProtoReflect.Descriptor instead.
func (*Discard) Descriptor() ([]byte, []int) {
	return file_api_coupapi_proto_rawDescGZIP(), []int{8}
}

func (x *Discard) GetPlayerId() string {
	if x != nil {
		return x.PlayerId
	}
	return ""
}

func (x *Discard) GetCardId() string {
	if x != nil {
		return x.CardId
	}
	return ""
}

type StealCard struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PlayerId string `protobuf:"bytes,1,opt,name=player_id,json=playerId,proto3" json:"player_id,omitempty"`
}

func (x *StealCard) Reset() {
	*x = StealCard{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_coupapi_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StealCard) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StealCard) ProtoMessage() {}

func (x *StealCard) ProtoReflect() protoreflect.Message {
	mi := &file_api_coupapi_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StealCard.ProtoReflect.Descriptor instead.
func (*StealCard) Descriptor() ([]byte, []int) {
	return file_api_coupapi_proto_rawDescGZIP(), []int{9}
}

func (x *StealCard) GetPlayerId() string {
	if x != nil {
		return x.PlayerId
	}
	return ""
}

type ChangeCard struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PlayerId string `protobuf:"bytes,1,opt,name=player_id,json=playerId,proto3" json:"player_id,omitempty"`
}

func (x *ChangeCard) Reset() {
	*x = ChangeCard{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_coupapi_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ChangeCard) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChangeCard) ProtoMessage() {}

func (x *ChangeCard) ProtoReflect() protoreflect.Message {
	mi := &file_api_coupapi_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChangeCard.ProtoReflect.Descriptor instead.
func (*ChangeCard) Descriptor() ([]byte, []int) {
	return file_api_coupapi_proto_rawDescGZIP(), []int{10}
}

func (x *ChangeCard) GetPlayerId() string {
	if x != nil {
		return x.PlayerId
	}
	return ""
}

type Assassin struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PlayerId string `protobuf:"bytes,1,opt,name=player_id,json=playerId,proto3" json:"player_id,omitempty"`
	//Card
	CardId string `protobuf:"bytes,2,opt,name=card_id,json=cardId,proto3" json:"card_id,omitempty"`
}

func (x *Assassin) Reset() {
	*x = Assassin{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_coupapi_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Assassin) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Assassin) ProtoMessage() {}

func (x *Assassin) ProtoReflect() protoreflect.Message {
	mi := &file_api_coupapi_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Assassin.ProtoReflect.Descriptor instead.
func (*Assassin) Descriptor() ([]byte, []int) {
	return file_api_coupapi_proto_rawDescGZIP(), []int{11}
}

func (x *Assassin) GetPlayerId() string {
	if x != nil {
		return x.PlayerId
	}
	return ""
}

func (x *Assassin) GetCardId() string {
	if x != nil {
		return x.CardId
	}
	return ""
}

type DrawThreeCoins struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PlayerId string `protobuf:"bytes,1,opt,name=player_id,json=playerId,proto3" json:"player_id,omitempty"`
}

func (x *DrawThreeCoins) Reset() {
	*x = DrawThreeCoins{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_coupapi_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DrawThreeCoins) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DrawThreeCoins) ProtoMessage() {}

func (x *DrawThreeCoins) ProtoReflect() protoreflect.Message {
	mi := &file_api_coupapi_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DrawThreeCoins.ProtoReflect.Descriptor instead.
func (*DrawThreeCoins) Descriptor() ([]byte, []int) {
	return file_api_coupapi_proto_rawDescGZIP(), []int{12}
}

func (x *DrawThreeCoins) GetPlayerId() string {
	if x != nil {
		return x.PlayerId
	}
	return ""
}

type DenySteal struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PlayerId string `protobuf:"bytes,1,opt,name=player_id,json=playerId,proto3" json:"player_id,omitempty"`
}

func (x *DenySteal) Reset() {
	*x = DenySteal{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_coupapi_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DenySteal) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DenySteal) ProtoMessage() {}

func (x *DenySteal) ProtoReflect() protoreflect.Message {
	mi := &file_api_coupapi_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DenySteal.ProtoReflect.Descriptor instead.
func (*DenySteal) Descriptor() ([]byte, []int) {
	return file_api_coupapi_proto_rawDescGZIP(), []int{13}
}

func (x *DenySteal) GetPlayerId() string {
	if x != nil {
		return x.PlayerId
	}
	return ""
}

type DenyKill struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PlayerId string `protobuf:"bytes,1,opt,name=player_id,json=playerId,proto3" json:"player_id,omitempty"`
}

func (x *DenyKill) Reset() {
	*x = DenyKill{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_coupapi_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DenyKill) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DenyKill) ProtoMessage() {}

func (x *DenyKill) ProtoReflect() protoreflect.Message {
	mi := &file_api_coupapi_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DenyKill.ProtoReflect.Descriptor instead.
func (*DenyKill) Descriptor() ([]byte, []int) {
	return file_api_coupapi_proto_rawDescGZIP(), []int{14}
}

func (x *DenyKill) GetPlayerId() string {
	if x != nil {
		return x.PlayerId
	}
	return ""
}

type Coup struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PlayerId string `protobuf:"bytes,1,opt,name=player_id,json=playerId,proto3" json:"player_id,omitempty"`
	//Card
	CardId string `protobuf:"bytes,2,opt,name=card_id,json=cardId,proto3" json:"card_id,omitempty"`
}

func (x *Coup) Reset() {
	*x = Coup{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_coupapi_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Coup) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Coup) ProtoMessage() {}

func (x *Coup) ProtoReflect() protoreflect.Message {
	mi := &file_api_coupapi_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Coup.ProtoReflect.Descriptor instead.
func (*Coup) Descriptor() ([]byte, []int) {
	return file_api_coupapi_proto_rawDescGZIP(), []int{15}
}

func (x *Coup) GetPlayerId() string {
	if x != nil {
		return x.PlayerId
	}
	return ""
}

func (x *Coup) GetCardId() string {
	if x != nil {
		return x.CardId
	}
	return ""
}

// Payload for an RPC request to find a match.
type RpcFindMatchRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// // User can choose a fast or normal speed match.
	Fast bool `protobuf:"varint,1,opt,name=fast,proto3" json:"fast,omitempty"`
}

func (x *RpcFindMatchRequest) Reset() {
	*x = RpcFindMatchRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_coupapi_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RpcFindMatchRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcFindMatchRequest) ProtoMessage() {}

func (x *RpcFindMatchRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_coupapi_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcFindMatchRequest.ProtoReflect.Descriptor instead.
func (*RpcFindMatchRequest) Descriptor() ([]byte, []int) {
	return file_api_coupapi_proto_rawDescGZIP(), []int{16}
}

func (x *RpcFindMatchRequest) GetFast() bool {
	if x != nil {
		return x.Fast
	}
	return false
}

// Payload for an RPC response containing match IDs the user can join.
type RpcFindMatchResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// One or more matches that fit the user's request.
	MatchIds []string `protobuf:"bytes,1,rep,name=match_ids,json=matchIds,proto3" json:"match_ids,omitempty"`
}

func (x *RpcFindMatchResponse) Reset() {
	*x = RpcFindMatchResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_coupapi_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RpcFindMatchResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcFindMatchResponse) ProtoMessage() {}

func (x *RpcFindMatchResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_coupapi_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcFindMatchResponse.ProtoReflect.Descriptor instead.
func (*RpcFindMatchResponse) Descriptor() ([]byte, []int) {
	return file_api_coupapi_proto_rawDescGZIP(), []int{17}
}

func (x *RpcFindMatchResponse) GetMatchIds() []string {
	if x != nil {
		return x.MatchIds
	}
	return nil
}

var File_api_coupapi_proto protoreflect.FileDescriptor

var file_api_coupapi_proto_rawDesc = []byte{
	0x0a, 0x11, 0x61, 0x70, 0x69, 0x2f, 0x63, 0x6f, 0x75, 0x70, 0x61, 0x70, 0x69, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x12, 0x03, 0x61, 0x70, 0x69, 0x22, 0x79, 0x0a, 0x0a, 0x50, 0x6c, 0x61, 0x79,
	0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1f, 0x0a, 0x05, 0x63, 0x61,
	0x72, 0x64, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x09, 0x2e, 0x61, 0x70, 0x69, 0x2e,
	0x43, 0x61, 0x72, 0x64, 0x52, 0x05, 0x63, 0x61, 0x72, 0x64, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x63,
	0x6f, 0x69, 0x6e, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x63, 0x6f, 0x69, 0x6e,
	0x73, 0x12, 0x20, 0x0a, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0e,
	0x32, 0x0a, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x65, 0x52, 0x05, 0x73, 0x74,
	0x61, 0x74, 0x65, 0x22, 0x35, 0x0a, 0x04, 0x43, 0x61, 0x72, 0x64, 0x12, 0x0e, 0x0a, 0x02, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x1d, 0x0a, 0x04, 0x72,
	0x6f, 0x6c, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x09, 0x2e, 0x61, 0x70, 0x69, 0x2e,
	0x52, 0x6f, 0x6c, 0x65, 0x52, 0x04, 0x72, 0x6f, 0x6c, 0x65, 0x22, 0xf9, 0x01, 0x0a, 0x05, 0x53,
	0x74, 0x61, 0x72, 0x74, 0x12, 0x3d, 0x0a, 0x0b, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x49, 0x6e,
	0x66, 0x6f, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x61, 0x70, 0x69, 0x2e,
	0x53, 0x74, 0x61, 0x72, 0x74, 0x2e, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f,
	0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x0b, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x49, 0x6e,
	0x66, 0x6f, 0x73, 0x12, 0x2a, 0x0a, 0x11, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x5f, 0x70,
	0x6c, 0x61, 0x79, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f,
	0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x49, 0x64, 0x12,
	0x1a, 0x0a, 0x08, 0x64, 0x65, 0x61, 0x64, 0x6c, 0x69, 0x6e, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x08, 0x64, 0x65, 0x61, 0x64, 0x6c, 0x69, 0x6e, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x6d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x1a, 0x4f, 0x0a, 0x10, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x49,
	0x6e, 0x66, 0x6f, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x25, 0x0a, 0x05, 0x76,
	0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x61, 0x70, 0x69,
	0x2e, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x05, 0x76, 0x61, 0x6c,
	0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0xa9, 0x02, 0x0a, 0x06, 0x55, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x12, 0x3e, 0x0a, 0x0b, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x73,
	0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x55, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x2e, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x73, 0x45,
	0x6e, 0x74, 0x72, 0x79, 0x52, 0x0b, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f,
	0x73, 0x12, 0x2a, 0x0a, 0x11, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x5f, 0x70, 0x6c, 0x61,
	0x79, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x63, 0x75,
	0x72, 0x72, 0x65, 0x6e, 0x74, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x49, 0x64, 0x12, 0x2c, 0x0a,
	0x12, 0x71, 0x75, 0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72,
	0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x10, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x69, 0x6f, 0x6e, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x49, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x64,
	0x65, 0x61, 0x64, 0x6c, 0x69, 0x6e, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x64,
	0x65, 0x61, 0x64, 0x6c, 0x69, 0x6e, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x1a, 0x4f, 0x0a, 0x10, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x73,
	0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x25, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x50, 0x6c, 0x61,
	0x79, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02,
	0x38, 0x01, 0x22, 0x06, 0x0a, 0x04, 0x44, 0x6f, 0x6e, 0x65, 0x22, 0x27, 0x0a, 0x08, 0x51, 0x75,
	0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1b, 0x0a, 0x09, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72,
	0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x70, 0x6c, 0x61, 0x79, 0x65,
	0x72, 0x49, 0x64, 0x22, 0x3c, 0x0a, 0x07, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x69, 0x6e, 0x12, 0x1b,
	0x0a, 0x09, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x08, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x49, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x63,
	0x6f, 0x69, 0x6e, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x63, 0x6f, 0x69, 0x6e,
	0x73, 0x22, 0x27, 0x0a, 0x08, 0x44, 0x72, 0x61, 0x77, 0x43, 0x61, 0x72, 0x64, 0x12, 0x1b, 0x0a,
	0x09, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x08, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x49, 0x64, 0x22, 0x3f, 0x0a, 0x07, 0x44, 0x69,
	0x73, 0x63, 0x61, 0x72, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x5f,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72,
	0x49, 0x64, 0x12, 0x17, 0x0a, 0x07, 0x63, 0x61, 0x72, 0x64, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x06, 0x63, 0x61, 0x72, 0x64, 0x49, 0x64, 0x22, 0x28, 0x0a, 0x09, 0x53,
	0x74, 0x65, 0x61, 0x6c, 0x43, 0x61, 0x72, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x70, 0x6c, 0x61, 0x79,
	0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x70, 0x6c, 0x61,
	0x79, 0x65, 0x72, 0x49, 0x64, 0x22, 0x29, 0x0a, 0x0a, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x43,
	0x61, 0x72, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x5f, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x49, 0x64,
	0x22, 0x40, 0x0a, 0x08, 0x41, 0x73, 0x73, 0x61, 0x73, 0x73, 0x69, 0x6e, 0x12, 0x1b, 0x0a, 0x09,
	0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x08, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x49, 0x64, 0x12, 0x17, 0x0a, 0x07, 0x63, 0x61, 0x72,
	0x64, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x63, 0x61, 0x72, 0x64,
	0x49, 0x64, 0x22, 0x2d, 0x0a, 0x0e, 0x44, 0x72, 0x61, 0x77, 0x54, 0x68, 0x72, 0x65, 0x65, 0x43,
	0x6f, 0x69, 0x6e, 0x73, 0x12, 0x1b, 0x0a, 0x09, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x5f, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x49,
	0x64, 0x22, 0x28, 0x0a, 0x09, 0x44, 0x65, 0x6e, 0x79, 0x53, 0x74, 0x65, 0x61, 0x6c, 0x12, 0x1b,
	0x0a, 0x09, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x08, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x49, 0x64, 0x22, 0x27, 0x0a, 0x08, 0x44,
	0x65, 0x6e, 0x79, 0x4b, 0x69, 0x6c, 0x6c, 0x12, 0x1b, 0x0a, 0x09, 0x70, 0x6c, 0x61, 0x79, 0x65,
	0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x70, 0x6c, 0x61, 0x79,
	0x65, 0x72, 0x49, 0x64, 0x22, 0x3c, 0x0a, 0x04, 0x43, 0x6f, 0x75, 0x70, 0x12, 0x1b, 0x0a, 0x09,
	0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x08, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x49, 0x64, 0x12, 0x17, 0x0a, 0x07, 0x63, 0x61, 0x72,
	0x64, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x63, 0x61, 0x72, 0x64,
	0x49, 0x64, 0x22, 0x29, 0x0a, 0x13, 0x52, 0x70, 0x63, 0x46, 0x69, 0x6e, 0x64, 0x4d, 0x61, 0x74,
	0x63, 0x68, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x66, 0x61, 0x73,
	0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x04, 0x66, 0x61, 0x73, 0x74, 0x22, 0x33, 0x0a,
	0x14, 0x52, 0x70, 0x63, 0x46, 0x69, 0x6e, 0x64, 0x4d, 0x61, 0x74, 0x63, 0x68, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x6d, 0x61, 0x74, 0x63, 0x68, 0x5f, 0x69,
	0x64, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x08, 0x6d, 0x61, 0x74, 0x63, 0x68, 0x49,
	0x64, 0x73, 0x2a, 0x45, 0x0a, 0x04, 0x52, 0x6f, 0x6c, 0x65, 0x12, 0x0c, 0x0a, 0x08, 0x44, 0x49,
	0x50, 0x4c, 0x4f, 0x4d, 0x41, 0x54, 0x10, 0x00, 0x12, 0x09, 0x0a, 0x05, 0x51, 0x55, 0x45, 0x45,
	0x4e, 0x10, 0x01, 0x12, 0x0b, 0x0a, 0x07, 0x43, 0x41, 0x50, 0x54, 0x41, 0x49, 0x4e, 0x10, 0x02,
	0x12, 0x0c, 0x0a, 0x08, 0x41, 0x53, 0x53, 0x41, 0x53, 0x53, 0x49, 0x4e, 0x10, 0x03, 0x12, 0x09,
	0x0a, 0x05, 0x42, 0x41, 0x52, 0x4f, 0x4e, 0x10, 0x04, 0x2a, 0x5d, 0x0a, 0x05, 0x53, 0x74, 0x61,
	0x74, 0x65, 0x12, 0x08, 0x0a, 0x04, 0x49, 0x44, 0x4c, 0x45, 0x10, 0x00, 0x12, 0x09, 0x0a, 0x05,
	0x53, 0x54, 0x41, 0x52, 0x54, 0x10, 0x01, 0x12, 0x0c, 0x0a, 0x08, 0x51, 0x55, 0x45, 0x53, 0x54,
	0x49, 0x4f, 0x4e, 0x10, 0x02, 0x12, 0x0e, 0x0a, 0x0a, 0x44, 0x45, 0x4e, 0x59, 0x5f, 0x4d, 0x4f,
	0x4e, 0x45, 0x59, 0x10, 0x03, 0x12, 0x0e, 0x0a, 0x0a, 0x44, 0x45, 0x4e, 0x59, 0x5f, 0x53, 0x54,
	0x45, 0x41, 0x4c, 0x10, 0x04, 0x12, 0x11, 0x0a, 0x0d, 0x44, 0x45, 0x4e, 0x59, 0x5f, 0x41, 0x53,
	0x53, 0x41, 0x53, 0x53, 0x49, 0x4e, 0x10, 0x05, 0x2a, 0xb3, 0x02, 0x0a, 0x06, 0x4f, 0x70, 0x43,
	0x6f, 0x64, 0x65, 0x12, 0x11, 0x0a, 0x0d, 0x4f, 0x50, 0x43, 0x4f, 0x44, 0x45, 0x5f, 0x55, 0x4e,
	0x43, 0x4f, 0x44, 0x45, 0x10, 0x00, 0x12, 0x10, 0x0a, 0x0c, 0x4f, 0x50, 0x43, 0x4f, 0x44, 0x45,
	0x5f, 0x53, 0x54, 0x41, 0x52, 0x54, 0x10, 0x01, 0x12, 0x14, 0x0a, 0x10, 0x4f, 0x50, 0x43, 0x4f,
	0x44, 0x45, 0x5f, 0x44, 0x52, 0x41, 0x57, 0x5f, 0x43, 0x41, 0x52, 0x44, 0x10, 0x02, 0x12, 0x12,
	0x0a, 0x0e, 0x4f, 0x50, 0x43, 0x4f, 0x44, 0x45, 0x5f, 0x44, 0x49, 0x53, 0x43, 0x41, 0x52, 0x44,
	0x10, 0x03, 0x12, 0x15, 0x0a, 0x11, 0x4f, 0x50, 0x43, 0x4f, 0x44, 0x45, 0x5f, 0x44, 0x52, 0x41,
	0x57, 0x5f, 0x43, 0x4f, 0x49, 0x4e, 0x53, 0x10, 0x04, 0x12, 0x13, 0x0a, 0x0f, 0x4f, 0x50, 0x43,
	0x4f, 0x44, 0x45, 0x5f, 0x51, 0x55, 0x45, 0x53, 0x54, 0x49, 0x4f, 0x4e, 0x10, 0x05, 0x12, 0x0f,
	0x0a, 0x0b, 0x4f, 0x50, 0x43, 0x4f, 0x44, 0x45, 0x5f, 0x44, 0x4f, 0x4e, 0x45, 0x10, 0x06, 0x12,
	0x15, 0x0a, 0x11, 0x4f, 0x50, 0x43, 0x4f, 0x44, 0x45, 0x5f, 0x53, 0x54, 0x45, 0x41, 0x4c, 0x5f,
	0x43, 0x41, 0x52, 0x44, 0x10, 0x07, 0x12, 0x16, 0x0a, 0x12, 0x4f, 0x50, 0x43, 0x4f, 0x44, 0x45,
	0x5f, 0x43, 0x48, 0x41, 0x4e, 0x47, 0x45, 0x5f, 0x43, 0x41, 0x52, 0x44, 0x10, 0x08, 0x12, 0x13,
	0x0a, 0x0f, 0x4f, 0x50, 0x43, 0x4f, 0x44, 0x45, 0x5f, 0x41, 0x53, 0x53, 0x41, 0x53, 0x53, 0x49,
	0x4e, 0x10, 0x09, 0x12, 0x1b, 0x0a, 0x17, 0x4f, 0x50, 0x43, 0x4f, 0x44, 0x45, 0x5f, 0x44, 0x52,
	0x41, 0x57, 0x5f, 0x54, 0x48, 0x52, 0x45, 0x45, 0x5f, 0x43, 0x4f, 0x49, 0x4e, 0x53, 0x10, 0x0a,
	0x12, 0x15, 0x0a, 0x11, 0x4f, 0x50, 0x43, 0x4f, 0x44, 0x45, 0x5f, 0x44, 0x45, 0x4e, 0x59, 0x5f,
	0x53, 0x54, 0x45, 0x41, 0x4c, 0x10, 0x0b, 0x12, 0x14, 0x0a, 0x10, 0x4f, 0x50, 0x43, 0x4f, 0x44,
	0x45, 0x5f, 0x44, 0x45, 0x4e, 0x59, 0x5f, 0x4b, 0x49, 0x4c, 0x4c, 0x10, 0x0c, 0x12, 0x0f, 0x0a,
	0x0b, 0x4f, 0x50, 0x43, 0x4f, 0x44, 0x45, 0x5f, 0x43, 0x4f, 0x55, 0x50, 0x10, 0x0d, 0x42, 0x07,
	0x5a, 0x05, 0x2e, 0x2f, 0x61, 0x70, 0x69, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_api_coupapi_proto_rawDescOnce sync.Once
	file_api_coupapi_proto_rawDescData = file_api_coupapi_proto_rawDesc
)

func file_api_coupapi_proto_rawDescGZIP() []byte {
	file_api_coupapi_proto_rawDescOnce.Do(func() {
		file_api_coupapi_proto_rawDescData = protoimpl.X.CompressGZIP(file_api_coupapi_proto_rawDescData)
	})
	return file_api_coupapi_proto_rawDescData
}

var file_api_coupapi_proto_enumTypes = make([]protoimpl.EnumInfo, 3)
var file_api_coupapi_proto_msgTypes = make([]protoimpl.MessageInfo, 20)
var file_api_coupapi_proto_goTypes = []interface{}{
	(Role)(0),                    // 0: api.Role
	(State)(0),                   // 1: api.State
	(OpCode)(0),                  // 2: api.OpCode
	(*PlayerInfo)(nil),           // 3: api.PlayerInfo
	(*Card)(nil),                 // 4: api.Card
	(*Start)(nil),                // 5: api.Start
	(*Update)(nil),               // 6: api.Update
	(*Done)(nil),                 // 7: api.Done
	(*Question)(nil),             // 8: api.Question
	(*GetCoin)(nil),              // 9: api.GetCoin
	(*DrawCard)(nil),             // 10: api.DrawCard
	(*Discard)(nil),              // 11: api.Discard
	(*StealCard)(nil),            // 12: api.StealCard
	(*ChangeCard)(nil),           // 13: api.ChangeCard
	(*Assassin)(nil),             // 14: api.Assassin
	(*DrawThreeCoins)(nil),       // 15: api.DrawThreeCoins
	(*DenySteal)(nil),            // 16: api.DenySteal
	(*DenyKill)(nil),             // 17: api.DenyKill
	(*Coup)(nil),                 // 18: api.Coup
	(*RpcFindMatchRequest)(nil),  // 19: api.RpcFindMatchRequest
	(*RpcFindMatchResponse)(nil), // 20: api.RpcFindMatchResponse
	nil,                          // 21: api.Start.PlayerInfosEntry
	nil,                          // 22: api.Update.PlayerInfosEntry
}
var file_api_coupapi_proto_depIdxs = []int32{
	4,  // 0: api.PlayerInfo.cards:type_name -> api.Card
	1,  // 1: api.PlayerInfo.state:type_name -> api.State
	0,  // 2: api.Card.role:type_name -> api.Role
	21, // 3: api.Start.playerInfos:type_name -> api.Start.PlayerInfosEntry
	22, // 4: api.Update.playerInfos:type_name -> api.Update.PlayerInfosEntry
	3,  // 5: api.Start.PlayerInfosEntry.value:type_name -> api.PlayerInfo
	3,  // 6: api.Update.PlayerInfosEntry.value:type_name -> api.PlayerInfo
	7,  // [7:7] is the sub-list for method output_type
	7,  // [7:7] is the sub-list for method input_type
	7,  // [7:7] is the sub-list for extension type_name
	7,  // [7:7] is the sub-list for extension extendee
	0,  // [0:7] is the sub-list for field type_name
}

func init() { file_api_coupapi_proto_init() }
func file_api_coupapi_proto_init() {
	if File_api_coupapi_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_api_coupapi_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PlayerInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_coupapi_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Card); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_coupapi_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Start); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_coupapi_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Update); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_coupapi_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Done); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_coupapi_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Question); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_coupapi_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetCoin); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_coupapi_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DrawCard); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_coupapi_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Discard); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_coupapi_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StealCard); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_coupapi_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ChangeCard); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_coupapi_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Assassin); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_coupapi_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DrawThreeCoins); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_coupapi_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DenySteal); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_coupapi_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DenyKill); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_coupapi_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Coup); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_coupapi_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RpcFindMatchRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_coupapi_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RpcFindMatchResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_api_coupapi_proto_rawDesc,
			NumEnums:      3,
			NumMessages:   20,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_api_coupapi_proto_goTypes,
		DependencyIndexes: file_api_coupapi_proto_depIdxs,
		EnumInfos:         file_api_coupapi_proto_enumTypes,
		MessageInfos:      file_api_coupapi_proto_msgTypes,
	}.Build()
	File_api_coupapi_proto = out.File
	file_api_coupapi_proto_rawDesc = nil
	file_api_coupapi_proto_goTypes = nil
	file_api_coupapi_proto_depIdxs = nil
}
